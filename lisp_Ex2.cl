(setq *l1* '(1 2 3 4))
(setq *l2* '(20 42 32 50))

(defun is_member(item ls)
  (cond ((equal item (car ls))t)
	((equal (car ls) '()) nil)
	((not(equal item (car ls))) (is_member item (cdr ls)))))

(defun find_in(k)
  (let((guess1 (read)))
    (cond ((or (is_member guess1 *l1*)
	       (is_member guess1 *l2*))
	   (format t "correct you win!!! ~%"))
	  ((not (or (is_member guess1 *l1*)
		    (is_member guess1 *l2*)))
	   (game(- k 1))))))
(defun game(k)
  (cond ((= k 0) (format t "Sorry you lost~%"))
	((> k 0) (format t "Sorry not in any list. ~% Try again:  ") (find_in k))))

(defun guess()
  (format t "welcome to the game decide how many tries would you like to have:  ")
  (setq x (read))
  (format t "Guess a number that migh be in one of two lists:  ")
  (find_in x))
